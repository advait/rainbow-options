type Query {
    stock(symbol: String): Stock
}

"""
A stock with a potential option chain.
"""
type Stock {
    symbol: String!
    expirations: [Expiration!] @cacheControl(maxAge: 300)
}

"""
The expiration date for a particular chain of stock options.
"""
type Expiration {
    stock: Stock!,
    date: Date!,
    quotes: [OptionQuote!] @cacheControl(maxAge: 300)
}

"""
An option quote for a particular expiration and strike price.
"""
type OptionQuote {
    expiration: Expiration!,
    putCall: PutCall!,
    strikePrice: Float!,
    bid: Float,
    ask: Float,
    last: Float,
    impliedVolatility: Float,
}

"""
A calendar date.
"""
scalar Date

"""
Whether an option is a Put or a Call.
"""
enum PutCall {
    PUT
    CALL
}

"""
Indicates how long we should cache a field or an object.
TODO(advait): We should not need to manually define this field...
"""
directive @cacheControl(
    maxAge: Int,
) on OBJECT | FIELD_DEFINITION

