{"version":3,"sources":["blackscholes.gpu.js","graphql.tsx","util.ts","portfolio.ts","contours.js","option-leg-card.tsx","left-drawer.tsx","App.js","index.js"],"names":["normalCdf","x","t","Math","abs","probability","exp","euroCall","s","k","r","sigma","max","d1","log","pow","sqrt","d2","euroPut","gpu","GPU","portfolioValue","widthPx","heightPx","t0","tFinal","y0","yFinal","portfolio","performance","mark","x0","diff","entryTime","xFinal","kernel","createKernel","serializedPortfolio","y","floor","this","thread","price","entryCost","legsLength","totalValue","i","quantity","type","legT","iv","summedResults","setOutput","render","ret","push","legs","length","forEach","leg","putCall","PutCall","PUT","serializePortfolio","destroy","minValue","Infinity","value","pctGain","map","v","measure","addFunction","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","deserializeDate","moment","serializeDate","d","format","assert","condition","message","Error","require","Portfolio","entryStockPrice","getEarliestExpiration","arr","l","sort","a","b","isBefore","weightedIV","_","chain","sum","toURLSlug","JSON","stringify","grossValuePoint","legGrossValueAtPoint","netValuePoint","entryValue","endingValue","netValue","isMoment","other","fromURLSlug","memoize","slug","temp","parse","decodeURI","defaultPortfolio","CALL","add","contoursStyles","makeStyles","theme","outerContainer","width","height","toolbar","mixins","contoursInnerContainer","position","d3Container","zIndex","svg","Contours","props","classes","className","Toolbar","id","GainsTooltip","st","D3Contours","d3ContainerRef","React","createRef","stockPriceWindow","timeWindow","e","show","node","target","parentElement","bounds","getBoundingClientRect","clientX","left","clientY","top","tScale","invert","yScale","setST","mouseX","mouseY","initD3","updateD3","resizeListener","window","addEventListener","removeEventListener","nextProps","nextState","nextContext","equals","ref","onMouseMove","updateST","onMouseOut","container","current","offsetWidth","offsetHeight","d3","attr","domain","range","yAxis","scale","valueOf","tAxis","append","call","appendChild","clearMarks","clearMeasures","contourWidth","contourHeight","computedPortfolioValue","contours","size","console","getEntriesByType","contourPath","projection","point","stream","select","selectAll","data","join","Component","style","display","hidden","backgroundColor","padding","borderRadius","transform","toFixed","optionLegStyles","card","marginLeft","spacing","marginRight","marginTop","marginBottom","overflow","cardHeader","cursor","expand","transition","transitions","create","duration","shortest","expandOpen","contentRow","alignItems","justifyContent","bottomMargin","largeButtonGroup","flexGrow","flexShrink","largeButton","paddingLeft","paddingRight","smallButtonGroup","smallButton","margin","minWidth","descriptionValueParent","flexDirection","description","fontSize","color","grey","marginTOp","orangeLong","palette","getContrastText","deepOrange","orangeShort","purpleLong","deepPurple","purpleShort","OptionLegCard","useState","expanded","setExpanded","cond","test","und","undefined","quantityStr","q","putCallStr","pc","longShortStr","avatarStr","strikeStr","exprStr","callButtonClass","putButtonClass","setExpiration","delta","setLeg","clone","setQuantity","newQuantity","setStrike","setPutCall","setIV","Card","elevation","CardHeader","avatar","Tooltip","title","Avatar","clsx","subheader","action","IconButton","onClick","Collapse","in","timeout","Divider","Box","ButtonGroup","orientation","variant","Button","edge","deleteLeg","Fragment","portfolioSummaryStyles","paddingTop","flexBasis","descriptionValueParentShrink","textCenter","textAlign","PortfolioSummary","drawerStyles","drawer","overflowX","drawerPaper","drawerTypography","drawerTypographySmall","addIconButton","alignSelf","LeftDrawer","legIndex","setPortfolio","withNewLegs","filter","Drawer","paper","anchor","Grid","item","xs","TextField","label","fullWidth","symbol","onChange","setSymbol","newEntryStockPrice","parseFloat","newPortfolio","Typography","newLeg","newLegs","startIcon","noValidate","autoComplete","setR","useStyles","root","appBar","titleLink","menuButton","content","right","overflowY","App","tree","history","useHistory","urlParams","useParams","replace","url","p","mouseST","setMouseST","stockPriceRange","AppBar","Icon","Link","href","underline","aria-label","aria-controls","aria-haspopup","ReactDOM","path","document","getElementById"],"mappings":"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","file":"static/js/main.09d7ebef.chunk.js","sourcesContent":["import { GPU } from \"gpu.js\";\nimport { PutCall } from \"./portfolio\";\n\n/**\n * Black Scholes equations explicitly designed to run on the GPU via gpu.js.\n */\n\n/**\n * The CDF of the normal distribution with mean = 0 and stdev = 1.\n * @param x {number} the value to look up.\n * @returns {number} the CDF value.\n */\nexport function normalCdf(x) {\n  // HASTINGS.  MAX ERROR = .000001\n  const t = 1 / (1 + 0.2316419 * Math.abs(x));\n  const d = 0.3989423 * Math.exp((-x * x) / 2);\n  const probability =\n    d *\n    t *\n    (0.3193815 +\n      t * (-0.3565638 + t * (1.781478 + t * (-1.821256 + t * 1.330274))));\n  if (x > 0) {\n    return 1 - probability;\n  } else {\n    return probability;\n  }\n}\n\n/**\n * Returns the value of a European call option.\n * @param s {Number} Price of the stock\n * @param k {Number} Strike price of the option\n * @param t {Number} Time to maturity (in years)\n * @param r {Number} Risk-free interest rate (in years)\n * @param sigma {Number} Volatility (annual one-std volatility divided by s)\n * @returns {number} the value of the call option.\n */\nexport function euroCall(s, k, t, r, sigma) {\n  if (t === 0) {\n    return Math.max(0, s - k);\n  } else if (t < 0) {\n    return 0;\n  }\n  const d1 =\n    (Math.log(s / k) + (r + Math.pow(sigma, 2) / 2) * t) /\n    (sigma * Math.sqrt(t));\n  const d2 = d1 - sigma * Math.sqrt(t);\n  return s * normalCdf(d1) - k * Math.exp(-r * t) * normalCdf(d2);\n}\n\n/**\n * Returns the value of a European put option.\n * @param s {Number} Price of the stock\n * @param k {Number} Strike price of the option\n * @param t {Number} Time to maturity (in years)\n * @param r {Number} Risk-free interest rate (in years)\n * @param sigma {Number} Volatility (annual one-std volatility divided by s)\n * @returns {number} the value of the call option.\n */\nexport function euroPut(s, k, t, r, sigma) {\n  if (t === 0) {\n    return Math.max(0, k - s);\n  } else if (t < 0) {\n    return 0;\n  }\n  const d1 =\n    (Math.log(s / k) + (r + Math.pow(sigma, 2) / 2) * t) /\n    (sigma * Math.sqrt(t));\n  const d2 = d1 - sigma * Math.sqrt(t);\n  return k * Math.exp(-r * t) * normalCdf(-d2) - s * normalCdf(-d1);\n}\n\nconst gpu = new GPU();\ngpu.addFunction(normalCdf);\ngpu.addFunction(euroCall);\ngpu.addFunction(euroPut);\n\n/**\n * Serializes a portfolio into an array that can be read by the GPU.\n * @param portfolio {Portfolio}\n * @param r {number} Risk-free interest rate\n * @returns number[]\n */\nfunction serializePortfolio(portfolio, r) {\n  const ret = [];\n  // First push portfolio metadata\n  ret.push(portfolio.entryCost(r));\n  ret.push(portfolio.legs.length);\n  // Next push each leg data sequentially\n  portfolio.legs.forEach((leg) => {\n    ret.push(leg.quantity);\n    ret.push(leg.putCall === PutCall.PUT ? 0 : 1);\n    ret.push(leg.k);\n    ret.push(leg.t.diff(portfolio.entryTime, \"years\", true));\n    ret.push(leg.iv);\n  });\n  return ret;\n}\n\n/**\n * Uses the GPU to compute a grid of values of profitability for the given portfolio.\n * @param widthPx {number} The number of horizontal points to measure\n * @param heightPx {number} The number of vertical points to measure\n * @param t0 {number} The left-most value on the horizontal axis (time)\n * @param tFinal {number} The right-most value on the horizontal axis (time)\n * @param y0 {number} The top-most value on the vertical axis (stock price)\n * @param yFinal {number} The bottom-most value on the vertical axis (stock price)\n * @param portfolio {Portfolio} The portfolio whose value to compute\n * @param r {number} The risk-free interest rate\n * @returns {{minValue: number, pctGain: number[]}}\n */\nexport function portfolioValue(\n  widthPx,\n  heightPx,\n  t0,\n  tFinal,\n  y0,\n  yFinal,\n  portfolio,\n  r\n) {\n  performance.mark(\"portfolioValueStart\");\n\n  // Switch from moment dates to number dates in terms of fractions of years\n  const x0 = t0.diff(portfolio.entryTime, \"years\", true);\n  const xFinal = tFinal.diff(portfolio.entryTime, \"years\", true);\n\n  // Compute the net value (value - entry cost) for the whole options portfolio on the gpu\n  performance.mark(\"gpuLegStart\");\n  let kernel = gpu.createKernel(function (\n    widthPx,\n    heightPx,\n    x0,\n    xFinal,\n    y0,\n    yFinal,\n    serializedPortfolio,\n    r\n  ) {\n    const y = Math.floor(this.thread.x / widthPx);\n    const x = this.thread.x % widthPx;\n    let t0 = (x / widthPx) * (xFinal - x0) + x0;\n    let price = (y / heightPx) * (yFinal - y0) + y0;\n    const entryCost = serializedPortfolio[0];\n    const legsLength = serializedPortfolio[1];\n    const metadataPerLeg = 5;\n    let totalValue = 0;\n    for (let i = 0; i < legsLength; i++) {\n      const quantity = serializedPortfolio[i * metadataPerLeg + 2];\n      const type = serializedPortfolio[i * metadataPerLeg + 3];\n      const k = serializedPortfolio[i * metadataPerLeg + 4];\n      const legT = serializedPortfolio[i * metadataPerLeg + 5];\n      const iv = serializedPortfolio[i * metadataPerLeg + 6];\n      if (type === 0) {\n        totalValue += quantity * euroPut(price, k, legT - t0, r, iv);\n      } else {\n        totalValue += quantity * euroCall(price, k, legT - t0, r, iv);\n      }\n    }\n    return totalValue - entryCost;\n  });\n  let render = kernel.setOutput([widthPx * heightPx]);\n  const serializedPortfolio = serializePortfolio(portfolio, r);\n  const summedResults = render(\n    widthPx,\n    heightPx,\n    x0,\n    xFinal,\n    y0,\n    yFinal,\n    serializedPortfolio,\n    r\n  );\n  kernel.destroy();\n\n  // Compute min value so we can normalize based on pct gain\n  let minValue = Infinity;\n  for (let i = 0; i < summedResults.length; i++) {\n    const value = summedResults[i];\n    if (value < minValue) {\n      minValue = value;\n    }\n  }\n  const pctGain = summedResults.map((v) => v / -minValue); // -1 to +Inf\n  performance.measure(\"portfolioValue\", \"portfolioValueStart\");\n\n  return {\n    pctGain,\n    minValue,\n  };\n}\n","import { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"http://localhost:4000\",\n  }),\n  cache: new InMemoryCache(),\n});\n\nexport function wrapReact(tree: any) {\n  return <ApolloProvider client={client}>{tree}</ApolloProvider>;\n}\n\nconst DATE_FORMAT = \"YYYY-MM-DD\";\n\nexport function deserializeDate(s: string): moment.Moment {\n  // TODO(advait): This should really be handled transparently by Apollo\n  // Consider implementing: https://github.com/eturino/apollo-link-scalars?ts=2\n  return moment(s, DATE_FORMAT);\n}\n\nexport function serializeDate(d: moment.Moment): string {\n  return d.format(DATE_FORMAT);\n}\n","/**\n * If the condition is false, throw an Error with the given message.\n * @param condition\n * @param message\n */\nexport function assert(condition: boolean, message: string) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n","import _ from \"lodash\";\nimport { Moment } from \"moment\";\nimport { euroCall, euroPut } from \"./blackscholes.gpu\";\nimport { deserializeDate, serializeDate } from \"./graphql\";\nimport { assert } from \"./util\";\n\nconst moment = require(\"moment\");\n\n/**\n * Whether an Option is a Put or a Call.\n */\nexport enum PutCall {\n  PUT,\n  CALL,\n}\n\n/**\n * Represents a single leg/option within an options portfolio.\n */\nexport type Leg = {\n  readonly quantity: number;\n  readonly putCall: PutCall;\n  readonly k: number;\n  readonly t: Moment;\n  readonly iv: number;\n};\n\n/**\n * Represents an options portfolio consisting of multiple legs.\n */\nexport class Portfolio {\n  readonly legs: Leg[];\n  readonly entryTime: Moment;\n  readonly entryStockPrice: number;\n\n  constructor(legs: Leg[], entryTime: Moment, entryStockPrice: number) {\n    assert(legs.length > 0, \"Portfolio must have legs\");\n    assert(moment.isMoment(entryTime), \"entryTime must be a date\");\n    assert(entryStockPrice > 0, \"Stock price must be > 0\");\n    this.legs = legs;\n    this.entryTime = entryTime;\n    this.entryStockPrice = entryStockPrice;\n  }\n\n  /**\n   * Returns the expiration date of the earliest-expiring option in the portfolio.\n   */\n  getEarliestExpiration = (): Moment => {\n    const arr = this.legs.map((l) => l.t);\n    arr.sort((a, b) => (a.isBefore(b) ? -1 : 1));\n    return arr[0];\n  };\n\n  /**\n   * Returns the overall portfolio IV as a weighted average of each leg's IV where the weight is the absolute value of\n   * the quantity.\n   */\n  weightedIV = (): number => {\n    const sum = _.chain(this.legs)\n      .map((l) => Math.abs(l.quantity) * l.iv)\n      .sum()\n      .value();\n    const totalLegs = _.chain(this.legs)\n      .map((l) => Math.abs(l.quantity))\n      .sum()\n      .value();\n    return sum / totalLegs;\n  };\n\n  toURLSlug = (): string => {\n    return JSON.stringify({\n      legs: this.legs.map((l) => ({ ...l, t: serializeDate(l.t) })),\n      entryTime: serializeDate(this.entryTime),\n      entryStockPrice: this.entryStockPrice,\n    });\n  };\n\n  static fromURLSlug = _.memoize(\n    (slug: string): Portfolio => {\n      const temp = JSON.parse(decodeURI(slug));\n      const legs = temp.legs.map((l: any) => ({\n        ...l,\n        t: deserializeDate(l.t),\n      }));\n      const entryTime = deserializeDate(temp.entryTime);\n      return new Portfolio(legs, entryTime, temp.entryStockPrice);\n    }\n  );\n\n  /**\n   * Returns the total value of the portfolio at a given stock price and time.\n   * @param s Stock price\n   * @param t Point in time to measure the portfolio value\n   * @param r risk free rate\n   * @returns gross value of the portfolio\n   */\n  grossValuePoint = (s: number, t: Moment, r: number): number => {\n    return _.chain(this.legs)\n      .map((leg) => leg.quantity * legGrossValueAtPoint(s, t, leg, r))\n      .sum()\n      .value();\n  };\n\n  entryCost = (r: number): number => {\n    return this.grossValuePoint(this.entryStockPrice, this.entryTime, r);\n  };\n\n  /**\n   * Returns the value of the portfolio at a given stock price and time.\n   * @param s The stock price that we are using to lookup the portfolio value\n   * @param t Point in time to measure the portfolio value\n   * @param r risk free rate\n   * @returns value of the portfolio\n   */\n  netValuePoint = (s: number, t: Moment, r: number) => {\n    const entryValue = this.entryCost(r);\n    const endingValue = this.grossValuePoint(s, t, r);\n\n    const netValue = endingValue - entryValue;\n    const pctGain = netValue / entryValue;\n    return {\n      endingValue,\n      netValue,\n      pctGain,\n    };\n  };\n\n  /**\n   * Returns a new portfolio with the same entry time/cost but the provided\n   * legs.\n   * @param legs\n   */\n  withNewLegs(legs: Leg[]): Portfolio {\n    return new Portfolio(legs, this.entryTime, this.entryStockPrice);\n  }\n\n  /**\n   * Returns whether the two portfolios are equal.\n   * @param other\n   */\n  equals(other: Portfolio): boolean {\n    return this.toURLSlug() == other.toURLSlug();\n  }\n}\n\nexport const defaultPortfolio: Portfolio = new Portfolio(\n  [\n    {\n      quantity: 1,\n      putCall: PutCall.CALL,\n      k: 4,\n      t: moment().add(182, \"days\"),\n      iv: 1.2,\n    },\n  ],\n  moment(),\n  5\n);\n\n/**\n * Returns the entry cost of a single leg (ignoring quantity) at the given stock price and time.\n * @param s Stock price\n * @param t Point in time to measure the portfolio value\n * @param leg the leg to measure\n * @param r risk free rate\n * @returns gross value of the portfolio\n */\nexport function legGrossValueAtPoint(\n  s: number,\n  t: Moment,\n  leg: Leg,\n  r: number\n) {\n  if (leg.putCall === PutCall.CALL) {\n    const legT = leg.t.diff(t, \"years\", true);\n    return euroCall(s, leg.k, legT, r, leg.iv);\n  } else if (leg.putCall === PutCall.PUT) {\n    const legT = leg.t.diff(t, \"years\", true);\n    return euroPut(s, leg.k, legT, r, leg.iv);\n  } else {\n    throw Error(\"Invalid type: \" + leg.putCall);\n  }\n}\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport { portfolioValue } from \"./blackscholes.gpu\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport * as _ from \"lodash\";\nimport { assert } from \"./util\";\n\nconst contoursStyles = makeStyles((theme) => ({\n  outerContainer: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  toolbar: theme.mixins.toolbar,\n  contoursInnerContainer: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  d3Container: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 1,\n  },\n  svg: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 2,\n  },\n}));\n\nexport function Contours(props) {\n  const classes = contoursStyles();\n  return (\n    <div className={classes.outerContainer}>\n      <Toolbar className={classes.toolbar} />\n      <div\n        id=\"contoursInnerContainer\"\n        className={classes.contoursInnerContainer}\n      >\n        <D3Contours {...props} className={classes.d3Container} />\n        <GainsTooltip\n          st={props.st}\n          pctGain={props.portfolioValue.pctGain}\n          className={classes.svg}\n        />\n      </div>\n    </div>\n  );\n}\n\nclass D3Contours extends React.Component {\n  constructor(props) {\n    super(props);\n    this.d3ContainerRef = React.createRef();\n    this.stockPriceWindow = this.props.stockPriceWindow;\n    this.timeWindow = this.props.timeWindow;\n    this.portfolio = this.props.portfolio;\n    this.r = this.props.r;\n  }\n\n  /**\n   * Handle a mouse move/out event, update the S and T positions based on the coordinates of the mouse.\n   * @param e {MouseEvent}\n   * @param show {boolean} whether to show the gains tooltip (is the mouse over the contour graph?)\n   */\n  updateST(e, show) {\n    let node = e.target;\n    while (node.id !== \"contoursInnerContainer\") {\n      node = node.parentElement;\n      if (!node) {\n        throw new Error(\"Could not find contoursInnerContainer\");\n      }\n    }\n    const bounds = node.getBoundingClientRect();\n    const x = e.clientX - bounds.left;\n    const y = e.clientY - bounds.top;\n    const t = this.tScale.invert(x);\n    const s = this.yScale.invert(y);\n    this.props.setST({\n      s,\n      t: moment(t),\n      mouseX: e.clientX,\n      mouseY: e.clientY,\n      show,\n    });\n  }\n\n  componentDidMount() {\n    this.initD3();\n    this.updateD3();\n\n    this.resizeListener = _.debounce(() => this.updateD3(), 10);\n    window.addEventListener(\"resize\", this.resizeListener);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeListener);\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    // Major hacks to get d3 to play nicely with react's lifecycle\n    // Here, we only want to update D3 if any portfolio/options-related props have changed\n    if (\n      !_.isEqual(this.timeWindow, nextProps.timeWindow) ||\n      !_.isEqual(this.stockPriceWindow, nextProps.stockPriceWindow) ||\n      !this.portfolio.equals(nextProps.portfolio) ||\n      this.r !== nextProps.r\n    ) {\n      // Now that we've confirmed that the props have changed, we need to manually overwrite them\n      this.timeWindow = nextProps.timeWindow;\n      this.stockPriceWindow = nextProps.stockPriceWindow;\n      this.portfolio = nextProps.portfolio;\n      this.r = nextProps.r;\n\n      this.updateD3();\n    }\n\n    // Always prevent react from re-rendering our DOM as d3 is responsible for managing it.\n    return false;\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.d3ContainerRef}\n        onMouseMove={(e) => this.updateST(e, true)}\n        onMouseOut={(e) => this.updateST(e, false)}\n        className={this.props.className}\n      />\n    );\n  }\n\n  initD3() {\n    const container = this.d3ContainerRef.current;\n    assert(!!container, \"No canvas container\");\n\n    const width = container.offsetWidth || 100;\n    const height = container.offsetHeight || 100;\n\n    this.svg = d3.create(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n\n    this.yScale = this.yScale = d3\n      .scaleLinear()\n      .domain([this.stockPriceWindow.y0, this.stockPriceWindow.yFinal])\n      .range([0, height]);\n\n    this.yAxis = d3.axisRight().scale(this.yScale);\n\n    this.tScale = this.tScale = d3\n      .scaleUtc()\n      .domain([this.timeWindow.t0.valueOf(), this.timeWindow.tFinal.valueOf()])\n      .range([0, width]);\n\n    this.tAxis = d3.axisBottom().scale(this.tScale);\n\n    this.svg\n      .append(\"g\")\n      .attr(\"class\", \"contours\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-opacity\", 0.5);\n\n    this.svg\n      .append(\"g\")\n      .attr(\"class\", \"t-axis\")\n      .attr(\"transform\", `translate(0,${this.yScale(556)})`)\n      .call(this.tAxis);\n    this.svg.append(\"g\").attr(\"class\", \"y-axis\").call(this.yAxis);\n\n    container.appendChild(this.svg.node());\n  }\n\n  updateD3() {\n    performance.clearMarks();\n    performance.clearMeasures();\n\n    const container = this.d3ContainerRef.current;\n    assert(!!container, \"No canvas container\");\n\n    const width = container.offsetWidth || 100;\n    const height = container.offsetHeight || 100;\n\n    this.yScale\n      .domain([this.stockPriceWindow.y0, this.stockPriceWindow.yFinal])\n      .range([0, height]);\n\n    this.tScale\n      .domain([this.timeWindow.t0.valueOf(), this.timeWindow.tFinal.valueOf()])\n      .range([0, width]);\n\n    // Rather than compute the price for every pixel (resource intensive), we first scale down\n    // and then scale up the d3 contour projection below.\n    const scaleDownFactor = 4;\n    const contourWidth = Math.floor(width / scaleDownFactor);\n    const contourHeight = Math.floor(height / scaleDownFactor);\n    const computedPortfolioValue = portfolioValue(\n      contourWidth,\n      contourHeight,\n      this.timeWindow.t0,\n      this.timeWindow.tFinal,\n      this.stockPriceWindow.y0,\n      this.stockPriceWindow.yFinal,\n      this.portfolio,\n      this.r\n    );\n\n    performance.mark(\"d3ContoursStart\");\n    const contours = d3.contours().size([contourWidth, contourHeight])(\n      computedPortfolioValue.pctGain\n    );\n    performance.mark(\"d3ContoursEnd\");\n    performance.measure(\"d3Contours\", \"d3ContoursStart\", \"d3ContoursEnd\");\n    console.log(performance.getEntriesByType(\"measure\"));\n\n    const contourPath = d3.geoPath().projection(\n      d3.geoTransform({\n        point: function (x, y) {\n          this.stream.point(\n            (x / contourWidth) * width,\n            (y / contourWidth) * width\n          );\n        },\n      })\n    );\n\n    // Contour thresholds (pct gains) and the corresponding colors\n    const interpolatePctGain = (pctGain) => {\n      if (pctGain <= 0) {\n        return d3.scaleLinear().domain([-1, 0]).range([0, 0.5])(pctGain);\n      } else {\n        return d3.scalePow().domain([0, 3]).range([0.5, 1])(pctGain);\n      }\n    };\n\n    this.svg.attr(\"viewBox\", [0, 0, width, height]);\n\n    this.svg\n      .select(\".contours\")\n      .selectAll(\"path\")\n      .data(contours)\n      .join(\"path\")\n      .attr(\"fill\", (d) => d3.interpolateSpectral(interpolatePctGain(d.value)))\n      .attr(\"d\", contourPath);\n\n    this.svg\n      .select(\".t-axis\")\n      .attr(\n        \"transform\",\n        `translate(0,${this.yScale(this.portfolio.entryStockPrice)})`\n      )\n      .call(this.tAxis);\n\n    this.svg.select(\".y-axis\").call(this.yAxis);\n  }\n}\n\nfunction GainsTooltip(props) {\n  const display = props.hidden ? \"hidden\" : \"inline\";\n  const style = {\n    display,\n    position: \"fixed\",\n    top: props.st.mouseY + 20,\n    left: props.st.mouseX,\n    zIndex: 3,\n    backgroundColor: \"#33333344\",\n    padding: \"6px\",\n    borderRadius: \"4px\",\n    transform: \"translate(-40%, -200%)\",\n  };\n\n  const returns = (pctGain) => {\n    if (pctGain <= 0) {\n      return `${(pctGain * 100).toFixed(2)}%`;\n    } else if (pctGain < 1) {\n      return `+${(pctGain * 100).toFixed(2)}%`;\n    } else {\n      return `${pctGain.toFixed(2)}x`;\n    }\n  };\n\n  return (\n    <div className=\"gains-tooltip\" style={style}>\n      {returns(props.pctGain)}\n    </div>\n  );\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  Collapse,\n  Theme,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { deepOrange, deepPurple, grey } from \"@material-ui/core/colors\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { Leg, legGrossValueAtPoint, Portfolio, PutCall } from \"./portfolio\";\n\nexport type OptionLegCardProps = {\n  entryStockPrice: number;\n  entryTime: moment.Moment;\n  r: number;\n  leg: Leg;\n  setLeg: (leg: Leg) => void;\n  deleteLeg: () => void;\n};\n\n// @ts-ignore\nconst optionLegStyles = makeStyles((theme: Theme) => ({\n  card: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    overflow: \"visible\",\n  },\n  cardHeader: {\n    cursor: \"pointer\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  contentRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    justifyContent: \"space-between\",\n  },\n  bottomMargin: {\n    marginBottom: theme.spacing(2),\n  },\n  largeButtonGroup: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  largeButton: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  smallButtonGroup: {\n    marginRight: theme.spacing(2),\n  },\n  smallButton: {\n    padding: 0,\n    margin: 0,\n    minWidth: \"24px\",\n  },\n  descriptionValueParent: {\n    display: \"flex\",\n    flexGrow: 1,\n    flexDirection: \"column\",\n  },\n  description: {\n    fontSize: \"12px\",\n    color: grey[500],\n    marginTOp: \"-2px\",\n    marginBottom: \"3px\",\n  },\n  value: {\n    fontSize: \"18px\",\n  },\n  orangeLong: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  orangeShort: {\n    color: theme.palette.getContrastText(deepOrange[100]),\n    backgroundColor: deepOrange[100],\n  },\n  purpleLong: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  purpleShort: {\n    color: theme.palette.getContrastText(deepPurple[100]),\n    backgroundColor: deepPurple[100],\n  },\n  grey: {\n    color: theme.palette.getContrastText(grey[500]),\n    backgroundColor: grey[500],\n  },\n}));\n\nexport function OptionLegCard(props: OptionLegCardProps) {\n  const classes = optionLegStyles();\n  const [expanded, setExpanded] = useState(false);\n  const toggleExpanded = () => setExpanded(!expanded);\n\n  function cond<T>(\n    test: T | undefined,\n    und: string,\n    other: (t: T) => string\n  ): string {\n    if (test === undefined) {\n      return und;\n    } else {\n      return other(test);\n    }\n  }\n\n  const quantityStr = cond(props.leg.quantity, \"-\", (q) =>\n    q > 0 ? `+${q}` : `${q}`\n  );\n  const putCallStr = cond(props.leg.putCall, \"?\", (pc) =>\n    pc === PutCall.CALL ? \"Call\" : \"Put\"\n  );\n  const longShortStr = cond(props.leg.quantity, \"Long\", (q) =>\n    q < 0 ? \"Short\" : \"Long\"\n  );\n  const avatarStr = `${putCallStr[0]}${longShortStr[0]}`;\n  const strikeStr = cond(props.leg.k, \"?\", (k) => `$${k}`);\n  const exprStr = cond(\n    props.leg.t,\n    \"?\",\n    (t) => `${t.format(\"MMM DD, YYYY\")} (${t.diff(moment(), \"days\")} days)`\n  );\n  let callButtonClass = \"\";\n  if (props.leg.putCall === PutCall.CALL) {\n    callButtonClass =\n      props.leg.quantity && props.leg.quantity < 0\n        ? classes.orangeShort\n        : classes.orangeLong;\n  }\n  let putButtonClass = \"\";\n  if (props.leg.putCall === PutCall.PUT) {\n    putButtonClass =\n      props.leg.quantity && props.leg.quantity < 0\n        ? classes.purpleShort\n        : classes.purpleLong;\n  }\n\n  const setExpiration = (delta: moment.Duration) => () => {\n    props.setLeg({ ...props.leg, t: props.leg.t.clone().add(delta) });\n  };\n  const setQuantity = (delta: number) => () => {\n    let newQuantity = props.leg.quantity + delta;\n    if (newQuantity === 0) {\n      newQuantity += delta;\n    }\n    props.setLeg({ ...props.leg, quantity: newQuantity });\n  };\n  const setStrike = (delta: number) => () => {\n    // TODO(advait): Read the next k from the option chain instead of incrementing\n    props.setLeg({ ...props.leg, k: props.leg.k + delta });\n  };\n  const setPutCall = (putCall: PutCall) => () => {\n    props.setLeg({ ...props.leg, putCall });\n  };\n  const setIV = (delta: number) => () => {\n    props.setLeg({ ...props.leg, iv: props.leg.iv + delta });\n  };\n\n  return (\n    <Card elevation={1} className={classes.card}>\n      <CardHeader\n        avatar={\n          <Tooltip title={`${longShortStr} ${putCallStr}`}>\n            <Avatar className={clsx(putButtonClass, callButtonClass)}>\n              {avatarStr}\n            </Avatar>\n          </Tooltip>\n        }\n        title={`${quantityStr}x @ ${strikeStr} ${putCallStr}`}\n        subheader={`${exprStr}`}\n        action={\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        }\n        onClick={toggleExpanded}\n        className={classes.cardHeader}\n      />\n\n      <Collapse in={expanded} timeout=\"auto\">\n        <Divider className={classes.bottomMargin} />\n        <Box flexDirection=\"row\" className={classes.contentRow}>\n          <ButtonGroup\n            orientation=\"horizontal\"\n            variant=\"outlined\"\n            className={classes.largeButtonGroup}\n          >\n            <Button\n              className={clsx(classes.largeButton, callButtonClass)}\n              onClick={setPutCall(PutCall.CALL)}\n            >\n              {props.leg.quantity && props.leg.quantity < 0 ? \"Short\" : \"Long\"}{\" \"}\n              Call\n            </Button>\n            <Button\n              className={clsx(classes.largeButton, putButtonClass)}\n              onClick={setPutCall(PutCall.PUT)}\n            >\n              {props.leg.quantity && props.leg.quantity < 0 ? \"Short\" : \"Long\"}{\" \"}\n              Put\n            </Button>\n          </ButtonGroup>\n          <IconButton edge=\"end\">\n            <DeleteIcon onClick={props.deleteLeg} />\n          </IconButton>\n        </Box>\n\n        <Box flexDirection=\"row\" className={classes.contentRow}>\n          <ButtonGroup\n            orientation=\"vertical\"\n            variant=\"outlined\"\n            className={classes.smallButtonGroup}\n          >\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setExpiration(moment.duration(1, \"month\"))}\n            >\n              +\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setExpiration(moment.duration(-1, \"month\"))}\n            >\n              -\n            </Button>\n          </ButtonGroup>\n          <div className={classes.descriptionValueParent}>\n            <span className={classes.description}>Expiration</span>\n            <span className={classes.value}>\n              {props.leg.t ? (\n                <React.Fragment>\n                  {props.leg.t.format(\"MMM DD, YY\")} (\n                  {props.leg.t.diff(moment(), \"days\")} days)\n                </React.Fragment>\n              ) : (\n                \"Unknown\"\n              )}\n            </span>\n          </div>\n          <IconButton edge=\"end\">\n            <EditIcon />\n          </IconButton>\n        </Box>\n\n        <Box flexDirection=\"row\" className={classes.contentRow}>\n          <ButtonGroup\n            orientation=\"vertical\"\n            variant=\"outlined\"\n            className={classes.smallButtonGroup}\n          >\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setQuantity(1)}\n            >\n              +\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setQuantity(-1)}\n            >\n              -\n            </Button>\n          </ButtonGroup>\n          <div\n            className={classes.descriptionValueParent}\n            style={{ width: \"65px\" }}\n          >\n            <span className={classes.description}>Quantity</span>\n            <span className={classes.value}>\n              {props.leg.quantity ? props.leg.quantity : \"?\"}\n            </span>\n          </div>\n          <ButtonGroup\n            orientation=\"vertical\"\n            variant=\"outlined\"\n            className={classes.smallButtonGroup}\n          >\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setStrike(1)}\n            >\n              +\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setStrike(-1)}\n            >\n              -\n            </Button>\n          </ButtonGroup>\n          <div className={classes.descriptionValueParent}>\n            <span className={classes.description}>Strike Price</span>\n            <span className={classes.value}>\n              ${props.leg.k ? props.leg.k.toFixed(2) : \"?\"}\n            </span>\n          </div>\n          <IconButton edge=\"end\">\n            <EditIcon />\n          </IconButton>\n        </Box>\n\n        <Box flexDirection=\"row\" className={classes.contentRow}>\n          <ButtonGroup\n            orientation=\"vertical\"\n            variant=\"outlined\"\n            className={classes.smallButtonGroup}\n          >\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setIV(0.05)}\n            >\n              +\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setIV(-0.05)}\n            >\n              -\n            </Button>\n          </ButtonGroup>\n          <div\n            className={classes.descriptionValueParent}\n            style={{ width: \"60px\" }}\n          >\n            <span className={classes.description}>Unit Price</span>\n            <span className={classes.value}>\n              $\n              {legGrossValueAtPoint(\n                props.entryStockPrice,\n                props.entryTime,\n                props.leg,\n                props.r\n              ).toFixed(2)}\n            </span>\n          </div>\n          <div className={classes.descriptionValueParent}>\n            <span className={classes.description}>Implied Volatility</span>\n            <span className={classes.value}>\n              {props.leg.iv ? props.leg.iv.toFixed(2) : \"?\"}\n            </span>\n          </div>\n          <IconButton edge=\"end\">\n            <EditIcon />\n          </IconButton>\n        </Box>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport interface PortfolioSummaryProps {\n  r: number;\n  portfolio: Portfolio;\n}\n\n// @ts-ignore\nconst portfolioSummaryStyles = makeStyles((theme: Theme) => ({\n  card: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    paddingTop: theme.spacing(2),\n    overflow: \"visible\",\n  },\n  cardHeader: {\n    cursor: \"pointer\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  contentRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    justifyContent: \"space-between\",\n  },\n  bottomMargin: {\n    marginBottom: theme.spacing(2),\n  },\n  descriptionValueParent: {\n    display: \"flex\",\n    flexGrow: 1,\n    flexBasis: \"0px\",\n    flexDirection: \"column\",\n  },\n  descriptionValueParentShrink: {\n    display: \"flex\",\n    flexShrink: 1,\n    flexBasis: \"0px\",\n    flexDirection: \"column\",\n    \"& :last-child\": {\n      fontSize: \"0.875rem\",\n    },\n  },\n  description: {\n    fontSize: \"12px\",\n    color: grey[500],\n    marginTop: \"-2px\",\n    marginBottom: \"3px\",\n  },\n  value: {},\n  textCenter: {\n    textAlign: \"center\",\n  },\n}));\n\nexport function PortfolioSummary(props: PortfolioSummaryProps) {\n  const classes = portfolioSummaryStyles();\n\n  return (\n    <Card className={classes.card}>\n      <Box flexDirection=\"row\" className={classes.contentRow}>\n        <div className={classes.descriptionValueParent}>\n          <span className={classes.description}>Net Price</span>\n          <span className={classes.value}>\n            ${props.portfolio.entryCost(props.r).toFixed(2)}\n          </span>\n        </div>\n        <div className={classes.descriptionValueParent}>\n          <span className={classes.description}>Weighted IV</span>\n          <span className={classes.value}>\n            {props.portfolio.weightedIV().toFixed(2)}\n          </span>\n        </div>\n      </Box>\n\n      <Box flexDirection=\"row\" className={classes.contentRow}>\n        <div className={classes.descriptionValueParent}>\n          <span className={classes.description}>Max Gain</span>\n          <span className={classes.value}>38.39 (32x)</span>\n        </div>\n        <div className={classes.descriptionValueParent}>\n          <span className={classes.description}>Max Loss</span>\n          <span className={classes.value}>-$1.39 (-100%)</span>\n        </div>\n      </Box>\n\n      <Divider className={classes.bottomMargin} />\n\n      <Box flexDirection=\"row\" className={classes.contentRow}>\n        <Tooltip title=\"Delta - how much the option value changes for every dollar increase in stock price\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x394;\n            </span>\n            <span className={classes.value}>0.13</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Delta% - how much the option value changes (as a % of max loss) for every dollar increase in stock price\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x394;%\n            </span>\n            <span className={classes.value}>0.13</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Gamma - how much Delta changes for every dollar increase in stock price\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x194;\n            </span>\n            <span className={classes.value}>0.13</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Gamma% - how much Delta% changes for every dollar increase in stock price\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={classes.description}>&#x194;%</span>\n            <span className={classes.value}>22%</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Theta - how much the option value changes every day due to time decay\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x3F4;\n            </span>\n            <span className={classes.value}>-3.3</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Theta% - how much the option value changes (as a % of max loss) every day due to time decay\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x3F4;%\n            </span>\n            <span className={classes.value}>-4.3%</span>\n          </div>\n        </Tooltip>\n      </Box>\n    </Card>\n  );\n}\n","import { Button, Drawer, Theme } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { OptionLegCard, PortfolioSummary } from \"./option-leg-card\";\nimport { Leg, Portfolio } from \"./portfolio\";\n\nexport const drawerWidth = 350;\n\n// @ts-ignore\nconst drawerStyles = makeStyles((theme: Theme) => ({\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    overflowX: \"hidden\",\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    overflowX: \"hidden\",\n  },\n  drawerTypography: {\n    paddingTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  drawerTypographySmall: {\n    paddingTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  addIconButton: {\n    alignSelf: \"flex-end\",\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport type LeftDrawerProps = {\n  symbol: string;\n  setSymbol: (symbol: string) => void;\n  entryTime: moment.Moment;\n  r: number;\n  setR: (r: number) => void;\n  portfolio: Portfolio;\n  setPortfolio: (p: Portfolio) => void;\n};\n\nexport function LeftDrawer(props: LeftDrawerProps) {\n  const classes = drawerStyles();\n\n  const setLeg = (legIndex: number) => (newLeg: Leg) => {\n    const newLegs = _.clone(props.portfolio.legs);\n    newLegs[legIndex] = newLeg;\n    props.setPortfolio(props.portfolio.withNewLegs(newLegs));\n  };\n  const deleteLeg = (legIndex: number) => () => {\n    if (props.portfolio.legs.length === 1) {\n      return;\n    }\n    props.setPortfolio(\n      props.portfolio.withNewLegs(\n        props.portfolio.legs.filter((_, i) => i !== legIndex)\n      )\n    );\n  };\n  const addLeg = () => {\n    const newLegs = _.clone(props.portfolio.legs);\n    newLegs.push({\n      ...props.portfolio.legs[props.portfolio.legs.length - 1],\n    });\n    props.setPortfolio(props.portfolio.withNewLegs(newLegs));\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"left\"\n    >\n      <div className={classes.toolbar} />\n\n      <Grid container className={classes.drawerTypography} spacing={2}>\n        <Grid item xs={6}>\n          <TextField\n            label={\"Stock Ticker\"}\n            fullWidth\n            variant=\"outlined\"\n            value={props.symbol}\n            onChange={(e) => props.setSymbol(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label=\"Stock Price\"\n            fullWidth\n            variant=\"outlined\"\n            value={props.portfolio.entryStockPrice.toFixed(2)}\n            type=\"number\"\n            onChange={(e) => {\n              const newEntryStockPrice = parseFloat(e.target.value);\n              const newPortfolio = new Portfolio(\n                props.portfolio.legs,\n                props.portfolio.entryTime,\n                newEntryStockPrice\n              );\n              props.setPortfolio(newPortfolio);\n            }}\n          />\n        </Grid>\n      </Grid>\n\n      <Typography className={classes.drawerTypographySmall} />\n      <Divider />\n\n      <Typography variant=\"h6\" className={classes.drawerTypography}>\n        Options Legs\n      </Typography>\n      {props.portfolio.legs.map((leg: Leg, i: number) => (\n        <OptionLegCard\n          entryStockPrice={props.portfolio.entryStockPrice}\n          entryTime={props.entryTime}\n          r={props.r}\n          leg={leg}\n          setLeg={setLeg(i)}\n          deleteLeg={deleteLeg(i)}\n        />\n      ))}\n\n      <Button\n        variant=\"text\"\n        startIcon={<AddIcon />}\n        className={classes.addIconButton}\n        onClick={addLeg}\n      >\n        Add Leg\n      </Button>\n\n      <PortfolioSummary r={props.r} portfolio={props.portfolio} />\n\n      <Typography className={classes.drawerTypographySmall} />\n      <Divider />\n\n      <Typography variant=\"h6\" className={classes.drawerTypography}>\n        Variables\n      </Typography>\n      <form className={classes.drawerTypography} noValidate autoComplete=\"off\">\n        <TextField\n          label={\"r (risk-free rate)\"}\n          fullWidth\n          variant=\"outlined\"\n          value={props.r}\n          type=\"number\"\n          onChange={(e) => props.setR(parseFloat(e.target.value))}\n        />\n      </form>\n    </Drawer>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { defaultPortfolio, Portfolio } from \"./portfolio\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Icon, IconButton, Toolbar } from \"@material-ui/core\";\nimport \"typeface-roboto\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Link from \"@material-ui/core/Link\";\nimport LooksIcon from \"@material-ui/icons/Looks\";\nimport { Contours } from \"./contours\";\nimport moment from \"moment\";\nimport { drawerWidth, LeftDrawer } from \"./left-drawer\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport * as _ from \"lodash\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  titleLink: {\n    color: \"#FFF\",\n  },\n  toolbar: theme.mixins.toolbar,\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    top: 0,\n    right: 0,\n    width: `calc(100% - ${drawerWidth}px)`,\n    height: \"100%\",\n    display: \"flex\",\n    position: \"fixed\",\n    overflowY: \"hidden\",\n    padding: 0,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  // Parse portfolio from browser hash\n  const history = useHistory();\n  const urlParams = useParams();\n  const setPortfolio = (portfolio, replace = false) => {\n    const url = `/p/${portfolio.toURLSlug()}`;\n    if (replace) {\n      history.replace(url);\n    } else {\n      history.push(url);\n    }\n  };\n  let portfolio;\n  try {\n    portfolio = Portfolio.fromURLSlug(urlParams.p);\n  } catch (e) {\n    console.log(\n      \"Failed to deserialize portfolio form hash, falling back to default portfolio.\"\n    );\n    portfolio = defaultPortfolio;\n    setPortfolio(portfolio, true);\n  }\n\n  const [r, setR] = useState(0.007);\n  const [mouseST, setMouseST] = useState({\n    s: 0,\n    t: moment(),\n    mouseX: 0,\n    mouseY: 0,\n    show: false,\n  });\n  const [symbol, setSymbol] = useState(\"TEST\");\n  // TODO(advait): Allow us to modify the stock/time window via state\n  const timeWindow = {\n    t0: portfolio.entryTime,\n    tFinal: portfolio.getEarliestExpiration(),\n  };\n  const stockPriceRange = 2 * portfolio.entryStockPrice;\n  const stockPriceWindow = {\n    yFinal: Math.max(0, portfolio.entryStockPrice - stockPriceRange),\n    y0: portfolio.entryStockPrice + stockPriceRange,\n  };\n\n  const portfolioValue = portfolio.netValuePoint(mouseST.s, mouseST.t, r);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Icon edge=\"start\" className={classes.menuButton}>\n            <Link href=\"/\" underline=\"none\" className={classes.titleLink}>\n              <LooksIcon />\n            </Link>\n          </Icon>\n          <Link\n            href=\"/\"\n            underline=\"none\"\n            variant=\"h6\"\n            className={classes.titleLink}\n          >\n            Rainbow Options Calculator\n          </Link>\n          <div style={{ flexGrow: 1 }} />\n          <div>\n            <IconButton\n              aria-label=\"link to github\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <Link\n                href=\"https://github.com/advait/rainbow-options\"\n                className={classes.titleLink}\n                target=\"_blank\"\n              >\n                <GitHubIcon />\n              </Link>\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <LeftDrawer\n        portfolio={portfolio}\n        setPortfolio={setPortfolio}\n        portfolioValue={portfolioValue}\n        r={r}\n        setR={setR}\n        timeWindow={timeWindow}\n        symbol={symbol}\n        setSymbol={setSymbol}\n        mouseST={mouseST}\n        setST={setMouseST}\n      />\n      <main className={classes.content}>\n        <Contours\n          portfolio={portfolio}\n          portfolioValue={portfolioValue}\n          r={r}\n          timeWindow={timeWindow}\n          stockPriceWindow={stockPriceWindow}\n          st={mouseST}\n          setST={setMouseST}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { wrapReact } from \"./graphql\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  wrapReact(\n    <HashRouter>\n      <Switch>\n        <Route path=\"/p/:p\">\n          <App />\n        </Route>\n        <Route>\n          <App />\n        </Route>\n      </Switch>\n    </HashRouter>\n  ),\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}