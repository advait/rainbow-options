{"version":3,"sources":["graphql.tsx","portfolio.ts","blackscholes.js","contours.js","option-leg-card.tsx","left-drawer.tsx","App.js","index.js"],"names":["client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","deserializeDate","s","moment","serializeDate","d","format","PutCall","require","defaultPortfolio","legs","quantity","putCall","CALL","k","t","add","iv","entryTime","getEarliestExpiration","portfolio","arr","map","l","sort","a","b","isBefore","portfolioEntryCost","entryStockPrice","r","blackscholes","portfolioToURL","json","JSON","stringify","encodeURI","normalCdf","x","Math","abs","probability","exp","euroCall","sigma","max","d1","log","pow","sqrt","d2","euroPut","gpu","GPU","legGrossValueAtPoint","leg","legT","diff","PUT","Error","portfolioGrossValuePoint","_","sum","value","portfolioValue","widthPx","heightPx","t0","tFinal","y0","yFinal","performance","mark","x0","xFinal","entryCost","kernel","createKernel","serializedPortfolio","y","floor","this","thread","price","legsLength","totalValue","i","type","summedResults","setOutput","render","ret","push","length","forEach","serializePortfolio","destroy","minValue","Infinity","pctGain","v","measure","addFunction","contoursStyles","makeStyles","theme","outerContainer","width","height","toolbar","mixins","contoursInnerContainer","position","d3Container","zIndex","svg","Contours","props","classes","className","Toolbar","id","GainsTooltip","st","D3Contours","d3ContainerRef","React","createRef","stockPriceWindow","timeWindow","e","show","node","target","parentElement","bounds","getBoundingClientRect","clientX","left","clientY","top","tScale","invert","yScale","setST","mouseX","mouseY","initD3","updateD3","resizeListener","window","addEventListener","removeEventListener","nextProps","nextState","nextContext","ref","onMouseMove","updateST","onMouseOut","container","current","console","assert","offsetWidth","offsetHeight","d3","attr","domain","range","yAxis","scale","valueOf","tAxis","append","call","appendChild","clearMarks","clearMeasures","contourWidth","contourHeight","computedPortfolioValue","contours","size","getEntriesByType","contourPath","projection","point","stream","select","selectAll","data","join","Component","style","display","hidden","backgroundColor","padding","borderRadius","transform","toFixed","optionLegStyles","card","marginLeft","spacing","marginRight","marginTop","marginBottom","overflow","cardHeader","cursor","expand","transition","transitions","create","duration","shortest","expandOpen","contentRow","alignItems","justifyContent","bottomMargin","largeButtonGroup","flexGrow","flexShrink","largeButton","paddingLeft","paddingRight","smallButtonGroup","smallButton","margin","minWidth","descriptionValueParent","flexDirection","description","fontSize","color","grey","marginTOp","orangeLong","palette","getContrastText","deepOrange","orangeShort","purpleLong","deepPurple","purpleShort","OptionLegCard","useState","expanded","setExpanded","cond","test","und","other","undefined","quantityStr","q","putCallStr","pc","longShortStr","avatarStr","strikeStr","exprStr","callButtonClass","putButtonClass","setExpiration","delta","setLeg","clone","setQuantity","newQuantity","setStrike","setPutCall","setIV","Card","elevation","CardHeader","avatar","Tooltip","title","Avatar","clsx","subheader","action","IconButton","onClick","Collapse","in","timeout","Divider","Box","ButtonGroup","orientation","variant","Button","edge","deleteLeg","Fragment","portfolioSummaryStyles","paddingTop","flexBasis","descriptionValueParentShrink","textCenter","textAlign","PortfolioSummary","chain","drawerStyles","drawer","overflowX","drawerPaper","drawerTypography","drawerTypographySmall","addIconButton","alignSelf","LeftDrawer","legIndex","newPortfolio","cloneDeep","filter","setPortfolio","Drawer","paper","anchor","Grid","item","xs","TextField","label","fullWidth","symbol","onChange","setSymbol","setEntryStockPrice","parseFloat","Typography","newLeg","startIcon","noValidate","autoComplete","setR","useStyles","root","appBar","titleLink","menuButton","content","right","overflowY","App","tree","history","useHistory","urlParams","useParams","replace","url","temp","parse","decodeURI","portfolioFromURL","p","mouseST","setMouseST","stockPriceRange","entryValue","endingValue","netValue","portfolioNetValuePoint","AppBar","Icon","Link","href","underline","aria-label","aria-controls","aria-haspopup","ReactDOM","path","document","getElementById"],"mappings":"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","file":"static/js/main.2f66f679.chunk.js","sourcesContent":["import { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: \"http://localhost:4000\",\n  }),\n  cache: new InMemoryCache(),\n});\n\nexport function wrapReact(tree: any) {\n  return <ApolloProvider client={client}>{tree}</ApolloProvider>;\n}\n\nconst DATE_FORMAT = \"YYYY-MM-DD\";\n\nexport function deserializeDate(s: string): moment.Moment {\n  // TODO(advait): This should really be handled transparently by Apollo\n  // Consider implementing: https://github.com/eturino/apollo-link-scalars?ts=2\n  return moment(s, DATE_FORMAT);\n}\n\nexport function serializeDate(d: moment.Moment): string {\n  return d.format(DATE_FORMAT);\n}\n","import _ from \"lodash\";\nimport { Moment } from \"moment\";\nimport * as querystring from \"querystring\";\nimport * as blackscholes from \"./blackscholes\";\nimport { deserializeDate, serializeDate } from \"./graphql\";\n\nconst moment = require(\"moment\");\n\n/**\n * Represents an options portfolio consisting of multiple legs.\n */\nexport type Portfolio = {\n  legs: Leg[];\n  entryTime: Moment;\n};\n\n/**\n * Represents a single leg/option within an options portfolio.\n */\nexport type Leg = {\n  quantity: number;\n  putCall: PutCall;\n  k: number;\n  t: Moment;\n  iv: number;\n};\n\nexport enum PutCall {\n  PUT,\n  CALL,\n}\n\n/**\n * @type Portfolio\n */\nexport const defaultPortfolio: Portfolio = {\n  legs: [\n    {\n      quantity: 1,\n      putCall: PutCall.CALL,\n      k: 4,\n      t: moment().add(182, \"days\"),\n      iv: 1.2,\n    },\n  ],\n  entryTime: moment(),\n};\n\n/**\n * Returns the expiration date of the earliest-expiring option in the portfolio.\n */\nexport function getEarliestExpiration(portfolio: Portfolio): Moment {\n  const arr = portfolio.legs.map((l) => l.t);\n  arr.sort((a, b) => (a.isBefore(b) ? -1 : 1));\n  return arr[0];\n}\n\nexport function portfolioEntryCost(\n  entryStockPrice: number,\n  portfolio: Portfolio,\n  r: number\n): number {\n  return blackscholes.portfolioGrossValuePoint(\n    entryStockPrice,\n    portfolio.entryTime,\n    portfolio,\n    r\n  );\n}\n\n/**\n * Returns the overall portfolio IV as a weighted average of each leg's IV where the weight is the absolute value of\n * the quantity.\n * @param portfolio\n */\nexport function weightedIV(portfolio: Portfolio): number {\n  const sum = _.chain(portfolio.legs)\n    .map((l) => Math.abs(l.quantity) * l.iv)\n    .sum()\n    .value();\n  const totalLegs = _.chain(portfolio.legs)\n    .map((l) => Math.abs(l.quantity))\n    .sum()\n    .value();\n  return sum / totalLegs;\n}\n\nexport function portfolioToURL(portfolio: Portfolio): string {\n  const json = JSON.stringify({\n    ...portfolio,\n    legs: portfolio.legs.map((l) => ({ ...l, t: serializeDate(l.t) })),\n    entryTime: serializeDate(portfolio.entryTime),\n  });\n  return encodeURI(json);\n}\n\nexport function portfolioFromURL(url: string): Portfolio {\n  const temp = JSON.parse(decodeURI(url));\n  return {\n    ...temp,\n    legs: temp.legs.map((l: any) => ({ ...l, t: deserializeDate(l.t) })),\n    entryTime: deserializeDate(temp.entryTime),\n  };\n}\n","import { GPU } from \"gpu.js\";\nimport { portfolioEntryCost, PutCall } from \"./portfolio\";\nimport moment from \"moment\";\nimport * as _ from \"lodash\";\n\n/**\n * The CDF of the normal distribution with mean = 0 and stdev = 1.\n * @param x {number} the value to look up.\n * @returns {number} the CDF value.\n */\nexport function normalCdf(x) {\n  // HASTINGS.  MAX ERROR = .000001\n  const t = 1 / (1 + 0.2316419 * Math.abs(x));\n  const d = 0.3989423 * Math.exp((-x * x) / 2);\n  const probability =\n    d *\n    t *\n    (0.3193815 +\n      t * (-0.3565638 + t * (1.781478 + t * (-1.821256 + t * 1.330274))));\n  if (x > 0) {\n    return 1 - probability;\n  } else {\n    return probability;\n  }\n}\n\n/**\n * Returns the value of a European call option.\n * @param s {Number} Price of the stock\n * @param k {Number} Strike price of the option\n * @param t {Number} Time to maturity (in years)\n * @param r {Number} Risk-free interest rate (in years)\n * @param sigma {Number} Volatility (annual one-std volatility divided by s)\n * @returns {number} the value of the call option.\n */\nexport function euroCall(s, k, t, r, sigma) {\n  if (t === 0) {\n    return Math.max(0, s - k);\n  } else if (t < 0) {\n    return 0;\n  }\n  const d1 =\n    (Math.log(s / k) + (r + Math.pow(sigma, 2) / 2) * t) /\n    (sigma * Math.sqrt(t));\n  const d2 = d1 - sigma * Math.sqrt(t);\n  return s * normalCdf(d1) - k * Math.exp(-r * t) * normalCdf(d2);\n}\n\n/**\n * Returns the value of a European put option.\n * @param s {Number} Price of the stock\n * @param k {Number} Strike price of the option\n * @param t {Number} Time to maturity (in years)\n * @param r {Number} Risk-free interest rate (in years)\n * @param sigma {Number} Volatility (annual one-std volatility divided by s)\n * @returns {number} the value of the call option.\n */\nexport function euroPut(s, k, t, r, sigma) {\n  if (t === 0) {\n    return Math.max(0, k - s);\n  } else if (t < 0) {\n    return 0;\n  }\n  const d1 =\n    (Math.log(s / k) + (r + Math.pow(sigma, 2) / 2) * t) /\n    (sigma * Math.sqrt(t));\n  const d2 = d1 - sigma * Math.sqrt(t);\n  return k * Math.exp(-r * t) * normalCdf(-d2) - s * normalCdf(-d1);\n}\n\nconst gpu = new GPU();\ngpu.addFunction(normalCdf);\ngpu.addFunction(euroCall);\ngpu.addFunction(euroPut);\n\n/**\n * Returns the entry cost of a single leg (ignoring quantity) at the given stock price and time.\n * @param s {number} Stock price\n * @param t {moment.Moment} Point in time to measure the portfolio value\n * @param leg {Leg} the leg to measure\n * @param r {number} risk free rate\n * @returns {number} gross value of the portfolio\n */\nexport function legGrossValueAtPoint(s, t, leg, r) {\n  if (leg.putCall === PutCall.CALL) {\n    const legT = leg.t.diff(t, \"years\", true);\n    return euroCall(s, leg.k, legT, r, leg.iv);\n  } else if (leg.putCall === PutCall.PUT) {\n    const legT = leg.t.diff(t, \"years\", true);\n    return euroPut(s, leg.k, legT, r, leg.iv);\n  } else {\n    throw Error(\"Invalid type: \" + leg.putCall);\n  }\n}\n\n/**\n * Returns the total value of the portfolio at a given stock price and time.\n * @param s {number} Stock price\n * @param t {moment.Moment} Point in time to measure the portfolio value\n * @param portfolio {Portfolio} the portfolio to measure\n * @param r {number} risk free rate\n * @returns {number} gross value of the portfolio\n */\nexport function portfolioGrossValuePoint(s, t, portfolio, r) {\n  return _.chain(portfolio.legs)\n    .map((leg) => leg.quantity * legGrossValueAtPoint(s, t, leg, r))\n    .sum()\n    .value();\n}\n\n/**\n * Returns the value of the portfolio at a given stock price and time.\n * @param entryStockPrice {number} The stock price when the portfolio was purchased\n * @param s {number} The stock price that we are using to lookup the portfolio value\n * @param t {moment.Moment} Point in time to measure the portfolio value\n * @param portfolio {Portfolio} the portfolio to measure\n * @param r {number} risk free rate\n * @returns {{endingValue: number, netValue: number, pctGain, number}} value of the portfolio\n */\nexport function portfolioNetValuePoint(entryStockPrice, s, t, portfolio, r) {\n  const entryValue = portfolioGrossValuePoint(\n    entryStockPrice,\n    portfolio.entryTime,\n    portfolio,\n    r\n  );\n  const endingValue = portfolioGrossValuePoint(s, t, portfolio, r);\n\n  const netValue = endingValue - entryValue;\n  const pctGain = netValue / entryValue;\n  return {\n    endingValue,\n    netValue,\n    pctGain,\n  };\n}\n\n/**\n * Serializes a portfolio into an array that can be read by the GPU.\n * @param portfolio {Portfolio}\n * @param portfolioEntryCost {number}\n * @returns number[]\n */\nfunction serializePortfolio(portfolio, portfolioEntryCost) {\n  const ret = [];\n  // First push portfolio metadata\n  ret.push(portfolioEntryCost);\n  ret.push(portfolio.legs.length);\n  // Next push each leg data sequentially\n  portfolio.legs.forEach((leg) => {\n    ret.push(leg.quantity);\n    ret.push(leg.putCall === PutCall.PUT ? 0 : 1);\n    ret.push(leg.k);\n    ret.push(leg.t.diff(portfolio.entryTime, \"years\", true));\n    ret.push(leg.iv);\n  });\n  return ret;\n}\n\n/**\n * @param widthPx {number}\n * @param heightPx {number}\n * @param t0 {number}\n * @param tFinal {number}\n * @param y0 {number}\n * @param yFinal {number}\n * @param entryStockPrice {number}\n * @param portfolio {Portfolio}\n * @param r {number}\n * @returns {{minValue: number, pctGain: number[]}}\n */\nexport function portfolioValue(\n  widthPx,\n  heightPx,\n  t0,\n  tFinal,\n  y0,\n  yFinal,\n  entryStockPrice,\n  portfolio,\n  r\n) {\n  performance.mark(\"portfolioValueStart\");\n\n  // Switch from moment dates to number dates in terms of fractions of years\n  const x0 = t0.diff(portfolio.entryTime, \"years\", true);\n  const xFinal = tFinal.diff(portfolio.entryTime, \"years\", true);\n\n  const entryCost = portfolioEntryCost(entryStockPrice, portfolio, r);\n\n  // Compute the net value (value - entry cost) for the whole options portfolio on the gpu\n  performance.mark(\"gpuLegStart\");\n  let kernel = gpu.createKernel(function (\n    widthPx,\n    heightPx,\n    x0,\n    xFinal,\n    y0,\n    yFinal,\n    serializedPortfolio,\n    r\n  ) {\n    const y = Math.floor(this.thread.x / widthPx);\n    const x = this.thread.x % widthPx;\n    let t0 = (x / widthPx) * (xFinal - x0) + x0;\n    let price = (y / heightPx) * (yFinal - y0) + y0;\n    const entryCost = serializedPortfolio[0];\n    const legsLength = serializedPortfolio[1];\n    const metadataPerLeg = 5;\n    let totalValue = 0;\n    for (let i = 0; i < legsLength; i++) {\n      const quantity = serializedPortfolio[i * metadataPerLeg + 2];\n      const type = serializedPortfolio[i * metadataPerLeg + 3];\n      const k = serializedPortfolio[i * metadataPerLeg + 4];\n      const legT = serializedPortfolio[i * metadataPerLeg + 5];\n      const iv = serializedPortfolio[i * metadataPerLeg + 6];\n      if (type === 0) {\n        totalValue += quantity * euroPut(price, k, legT - t0, r, iv);\n      } else {\n        totalValue += quantity * euroCall(price, k, legT - t0, r, iv);\n      }\n    }\n    return totalValue - entryCost;\n  });\n  let render = kernel.setOutput([widthPx * heightPx]);\n  const serializedPortfolio = serializePortfolio(portfolio, entryCost);\n  const summedResults = render(\n    widthPx,\n    heightPx,\n    x0,\n    xFinal,\n    y0,\n    yFinal,\n    serializedPortfolio,\n    r\n  );\n  kernel.destroy();\n\n  // Compute min value so we can normalize based on pct gain\n  let minValue = Infinity;\n  for (let i = 0; i < summedResults.length; i++) {\n    const value = summedResults[i];\n    if (value < minValue) {\n      minValue = value;\n    }\n  }\n  const pctGain = summedResults.map((v) => v / -minValue); // -1 to +Inf\n  performance.measure(\"portfolioValue\", \"portfolioValueStart\");\n\n  return {\n    pctGain,\n    minValue,\n  };\n}\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport { portfolioValue } from \"./blackscholes\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport * as _ from \"lodash\";\n\nconst contoursStyles = makeStyles((theme) => ({\n  outerContainer: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  toolbar: theme.mixins.toolbar,\n  contoursInnerContainer: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  d3Container: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 1,\n  },\n  svg: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    zIndex: 2,\n  },\n}));\n\nexport function Contours(props) {\n  const classes = contoursStyles();\n  return (\n    <div className={classes.outerContainer}>\n      <Toolbar className={classes.toolbar} />\n      <div\n        id=\"contoursInnerContainer\"\n        className={classes.contoursInnerContainer}\n      >\n        <D3Contours {...props} className={classes.d3Container} />\n        <GainsTooltip\n          st={props.st}\n          pctGain={props.portfolioValue.pctGain}\n          className={classes.svg}\n        />\n      </div>\n    </div>\n  );\n}\n\nclass D3Contours extends React.Component {\n  constructor(props) {\n    super(props);\n    this.d3ContainerRef = React.createRef();\n    this.stockPriceWindow = this.props.stockPriceWindow;\n    this.timeWindow = this.props.timeWindow;\n    this.entryStockPrice = this.props.entryStockPrice;\n    this.portfolio = this.props.portfolio;\n    this.r = this.props.r;\n  }\n\n  /**\n   * Handle a mouse move/out event, update the S and T positions based on the coordinates of the mouse.\n   * @param e {MouseEvent}\n   * @param show {boolean} whether to show the gains tooltip (is the mouse over the contour graph?)\n   */\n  updateST(e, show) {\n    let node = e.target;\n    while (node.id !== \"contoursInnerContainer\") {\n      node = node.parentElement;\n      if (!node) {\n        throw new Error(\"Could not find contoursInnerContainer\");\n      }\n    }\n    const bounds = node.getBoundingClientRect();\n    const x = e.clientX - bounds.left;\n    const y = e.clientY - bounds.top;\n    const t = this.tScale.invert(x);\n    const s = this.yScale.invert(y);\n    this.props.setST({\n      s,\n      t: moment(t),\n      mouseX: e.clientX,\n      mouseY: e.clientY,\n      show,\n    });\n  }\n\n  componentDidMount() {\n    this.initD3();\n    this.updateD3();\n\n    this.resizeListener = _.debounce(() => this.updateD3(), 10);\n    window.addEventListener(\"resize\", this.resizeListener);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resizeListener);\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    // Major hacks to get d3 to play nicely with react's lifecycle\n    // Here, we only want to update D3 if any portfolio/options-related props have changed\n    if (\n      this.timeWindow.t0 !== nextProps.timeWindow.t0 ||\n      this.timeWindow.tFinal !== nextProps.timeWindow.tFinal ||\n      this.stockPriceWindow.y0 !== nextProps.stockPriceWindow.y0 ||\n      this.stockPriceWindow.yFinal !== nextProps.stockPriceWindow.yFinal ||\n      this.entryStockPrice !== nextProps.entryStockPrice ||\n      JSON.stringify(this.props.portfolio) !==\n        JSON.stringify(nextProps.portfolio) ||\n      this.r !== nextProps.r\n    ) {\n      // Now that we've confirmed that the props have changed, we need to manually overwrite them\n      this.timeWindow.t0 = nextProps.timeWindow.t0;\n      this.timeWindow.tFinal = nextProps.timeWindow.tFinal;\n      this.stockPriceWindow.y0 = nextProps.stockPriceWindow.y0;\n      this.stockPriceWindow.yFinal = nextProps.stockPriceWindow.yFinal;\n      this.entryStockPrice = nextProps.entryStockPrice;\n      this.portfolio = nextProps.portfolio;\n      this.r = nextProps.r;\n\n      this.updateD3();\n    }\n\n    // Always prevent react from re-rendering our DOM as d3 is responsible for managing it.\n    return false;\n  }\n\n  render() {\n    return (\n      <div\n        ref={this.d3ContainerRef}\n        onMouseMove={(e) => this.updateST(e, true)}\n        onMouseOut={(e) => this.updateST(e, false)}\n        className={this.props.className}\n      />\n    );\n  }\n\n  initD3() {\n    const container = this.d3ContainerRef.current;\n    console.assert(container, \"No canvas container\");\n\n    const width = container.offsetWidth || 100;\n    const height = container.offsetHeight || 100;\n\n    this.svg = d3.create(\"svg\").attr(\"viewBox\", [0, 0, width, height]);\n\n    this.yScale = this.yScale = d3\n      .scaleLinear()\n      .domain([this.stockPriceWindow.y0, this.stockPriceWindow.yFinal])\n      .range([0, height]);\n\n    this.yAxis = d3.axisRight().scale(this.yScale);\n\n    this.tScale = this.tScale = d3\n      .scaleUtc()\n      .domain([this.timeWindow.t0.valueOf(), this.timeWindow.tFinal.valueOf()])\n      .range([0, width]);\n\n    this.tAxis = d3.axisBottom().scale(this.tScale);\n\n    this.svg\n      .append(\"g\")\n      .attr(\"class\", \"contours\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-opacity\", 0.5);\n\n    this.svg\n      .append(\"g\")\n      .attr(\"class\", \"t-axis\")\n      .attr(\"transform\", `translate(0,${this.yScale(556)})`)\n      .call(this.tAxis);\n    this.svg.append(\"g\").attr(\"class\", \"y-axis\").call(this.yAxis);\n\n    container.appendChild(this.svg.node());\n  }\n\n  updateD3() {\n    performance.clearMarks();\n    performance.clearMeasures();\n\n    const container = this.d3ContainerRef.current;\n    console.assert(container, \"No canvas container\");\n\n    const width = container.offsetWidth || 100;\n    const height = container.offsetHeight || 100;\n\n    this.yScale\n      .domain([this.stockPriceWindow.y0, this.stockPriceWindow.yFinal])\n      .range([0, height]);\n\n    this.tScale\n      .domain([this.timeWindow.t0.valueOf(), this.timeWindow.tFinal.valueOf()])\n      .range([0, width]);\n\n    // Rather than compute the price for every pixel (resource intensive), we first scale down\n    // and then scale up the d3 contour projection below.\n    const scaleDownFactor = 4;\n    const contourWidth = Math.floor(width / scaleDownFactor);\n    const contourHeight = Math.floor(height / scaleDownFactor);\n    const computedPortfolioValue = portfolioValue(\n      contourWidth,\n      contourHeight,\n      this.timeWindow.t0,\n      this.timeWindow.tFinal,\n      this.stockPriceWindow.y0,\n      this.stockPriceWindow.yFinal,\n      this.entryStockPrice,\n      this.portfolio,\n      this.r\n    );\n\n    performance.mark(\"d3ContoursStart\");\n    const contours = d3.contours().size([contourWidth, contourHeight])(\n      computedPortfolioValue.pctGain\n    );\n    performance.mark(\"d3ContoursEnd\");\n    performance.measure(\"d3Contours\", \"d3ContoursStart\", \"d3ContoursEnd\");\n    console.log(performance.getEntriesByType(\"measure\"));\n\n    const contourPath = d3.geoPath().projection(\n      d3.geoTransform({\n        point: function (x, y) {\n          this.stream.point(\n            (x / contourWidth) * width,\n            (y / contourWidth) * width\n          );\n        },\n      })\n    );\n\n    // Contour thresholds (pct gains) and the corresponding colors\n    const interpolatePctGain = (pctGain) => {\n      if (pctGain <= 0) {\n        return d3.scaleLinear().domain([-1, 0]).range([0, 0.5])(pctGain);\n      } else {\n        return d3.scalePow().domain([0, 3]).range([0.5, 1])(pctGain);\n      }\n    };\n\n    this.svg.attr(\"viewBox\", [0, 0, width, height]);\n\n    this.svg\n      .select(\".contours\")\n      .selectAll(\"path\")\n      .data(contours)\n      .join(\"path\")\n      .attr(\"fill\", (d) => d3.interpolateSpectral(interpolatePctGain(d.value)))\n      .attr(\"d\", contourPath);\n\n    this.svg\n      .select(\".t-axis\")\n      .attr(\"transform\", `translate(0,${this.yScale(this.entryStockPrice)})`)\n      .call(this.tAxis);\n\n    this.svg.select(\".y-axis\").call(this.yAxis);\n  }\n}\n\nfunction GainsTooltip(props) {\n  const display = props.hidden ? \"hidden\" : \"inline\";\n  const style = {\n    display,\n    position: \"fixed\",\n    top: props.st.mouseY + 20,\n    left: props.st.mouseX,\n    zIndex: 3,\n    backgroundColor: \"#33333344\",\n    padding: \"6px\",\n    borderRadius: \"4px\",\n    transform: \"translate(-40%, -200%)\",\n  };\n\n  const returns = (pctGain) => {\n    if (pctGain <= 0) {\n      return `${(pctGain * 100).toFixed(2)}%`;\n    } else if (pctGain < 1) {\n      return `+${(pctGain * 100).toFixed(2)}%`;\n    } else {\n      return `${pctGain.toFixed(2)}x`;\n    }\n  };\n\n  return (\n    <div className=\"gains-tooltip\" style={style}>\n      {returns(props.pctGain)}\n    </div>\n  );\n}\n","import {\n  Avatar,\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  Collapse,\n  Theme,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { deepOrange, deepPurple, grey } from \"@material-ui/core/colors\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { legGrossValueAtPoint } from \"./blackscholes\";\nimport {\n  Leg,\n  Portfolio,\n  portfolioEntryCost,\n  PutCall,\n  weightedIV,\n} from \"./portfolio\";\n\nexport type OptionLegCardProps = {\n  entryStockPrice: number;\n  entryTime: moment.Moment;\n  r: number;\n  leg: Leg;\n  setLeg: (leg: Leg) => void;\n  deleteLeg: () => void;\n};\n\n// @ts-ignore\nconst optionLegStyles = makeStyles((theme: Theme) => ({\n  card: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    overflow: \"visible\",\n  },\n  cardHeader: {\n    cursor: \"pointer\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  contentRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    justifyContent: \"space-between\",\n  },\n  bottomMargin: {\n    marginBottom: theme.spacing(2),\n  },\n  largeButtonGroup: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  largeButton: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  smallButtonGroup: {\n    marginRight: theme.spacing(2),\n  },\n  smallButton: {\n    padding: 0,\n    margin: 0,\n    minWidth: \"24px\",\n  },\n  descriptionValueParent: {\n    display: \"flex\",\n    flexGrow: 1,\n    flexDirection: \"column\",\n  },\n  description: {\n    fontSize: \"12px\",\n    color: grey[500],\n    marginTOp: \"-2px\",\n    marginBottom: \"3px\",\n  },\n  value: {\n    fontSize: \"18px\",\n  },\n  orangeLong: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  orangeShort: {\n    color: theme.palette.getContrastText(deepOrange[100]),\n    backgroundColor: deepOrange[100],\n  },\n  purpleLong: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  purpleShort: {\n    color: theme.palette.getContrastText(deepPurple[100]),\n    backgroundColor: deepPurple[100],\n  },\n  grey: {\n    color: theme.palette.getContrastText(grey[500]),\n    backgroundColor: grey[500],\n  },\n}));\n\nexport function OptionLegCard(props: OptionLegCardProps) {\n  const classes = optionLegStyles();\n  const [expanded, setExpanded] = useState(false);\n  const toggleExpanded = () => setExpanded(!expanded);\n\n  function cond<T>(\n    test: T | undefined,\n    und: string,\n    other: (t: T) => string\n  ): string {\n    if (test === undefined) {\n      return und;\n    } else {\n      return other(test);\n    }\n  }\n\n  const quantityStr = cond(props.leg.quantity, \"-\", (q) =>\n    q > 0 ? `+${q}` : `${q}`\n  );\n  const putCallStr = cond(props.leg.putCall, \"?\", (pc) =>\n    pc === PutCall.CALL ? \"Call\" : \"Put\"\n  );\n  const longShortStr = cond(props.leg.quantity, \"Long\", (q) =>\n    q < 0 ? \"Short\" : \"Long\"\n  );\n  const avatarStr = `${putCallStr[0]}${longShortStr[0]}`;\n  const strikeStr = cond(props.leg.k, \"?\", (k) => `$${k}`);\n  const exprStr = cond(\n    props.leg.t,\n    \"?\",\n    (t) => `${t.format(\"MMM DD, YYYY\")} (${t.diff(moment(), \"days\")} days)`\n  );\n  let callButtonClass = \"\";\n  if (props.leg.putCall === PutCall.CALL) {\n    callButtonClass =\n      props.leg.quantity && props.leg.quantity < 0\n        ? classes.orangeShort\n        : classes.orangeLong;\n  }\n  let putButtonClass = \"\";\n  if (props.leg.putCall === PutCall.PUT) {\n    putButtonClass =\n      props.leg.quantity && props.leg.quantity < 0\n        ? classes.purpleShort\n        : classes.purpleLong;\n  }\n\n  const setExpiration = (delta: moment.Duration) => () => {\n    props.setLeg({ ...props.leg, t: props.leg.t.clone().add(delta) });\n  };\n  const setQuantity = (delta: number) => () => {\n    let newQuantity = props.leg.quantity + delta;\n    if (newQuantity === 0) {\n      newQuantity += delta;\n    }\n    props.setLeg({ ...props.leg, quantity: newQuantity });\n  };\n  const setStrike = (delta: number) => () => {\n    // TODO(advait): Read the next k from the option chain instead of incrementing\n    props.setLeg({ ...props.leg, k: props.leg.k + delta });\n  };\n  const setPutCall = (putCall: PutCall) => () => {\n    props.setLeg({ ...props.leg, putCall });\n  };\n  const setIV = (delta: number) => () => {\n    props.setLeg({ ...props.leg, iv: props.leg.iv + delta });\n  };\n\n  return (\n    <Card elevation={1} className={classes.card}>\n      <CardHeader\n        avatar={\n          <Tooltip title={`${longShortStr} ${putCallStr}`}>\n            <Avatar className={clsx(putButtonClass, callButtonClass)}>\n              {avatarStr}\n            </Avatar>\n          </Tooltip>\n        }\n        title={`${quantityStr}x @ ${strikeStr} ${putCallStr}`}\n        subheader={`${exprStr}`}\n        action={\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        }\n        onClick={toggleExpanded}\n        className={classes.cardHeader}\n      />\n\n      <Collapse in={expanded} timeout=\"auto\">\n        <Divider className={classes.bottomMargin} />\n        <Box flexDirection=\"row\" className={classes.contentRow}>\n          <ButtonGroup\n            orientation=\"horizontal\"\n            variant=\"outlined\"\n            className={classes.largeButtonGroup}\n          >\n            <Button\n              className={clsx(classes.largeButton, callButtonClass)}\n              onClick={setPutCall(PutCall.CALL)}\n            >\n              {props.leg.quantity && props.leg.quantity < 0 ? \"Short\" : \"Long\"}{\" \"}\n              Call\n            </Button>\n            <Button\n              className={clsx(classes.largeButton, putButtonClass)}\n              onClick={setPutCall(PutCall.PUT)}\n            >\n              {props.leg.quantity && props.leg.quantity < 0 ? \"Short\" : \"Long\"}{\" \"}\n              Put\n            </Button>\n          </ButtonGroup>\n          <IconButton edge=\"end\">\n            <DeleteIcon onClick={props.deleteLeg} />\n          </IconButton>\n        </Box>\n\n        <Box flexDirection=\"row\" className={classes.contentRow}>\n          <ButtonGroup\n            orientation=\"vertical\"\n            variant=\"outlined\"\n            className={classes.smallButtonGroup}\n          >\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setExpiration(moment.duration(1, \"month\"))}\n            >\n              +\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setExpiration(moment.duration(-1, \"month\"))}\n            >\n              -\n            </Button>\n          </ButtonGroup>\n          <div className={classes.descriptionValueParent}>\n            <span className={classes.description}>Expiration</span>\n            <span className={classes.value}>\n              {props.leg.t ? (\n                <React.Fragment>\n                  {props.leg.t.format(\"MMM DD, YY\")} (\n                  {props.leg.t.diff(moment(), \"days\")} days)\n                </React.Fragment>\n              ) : (\n                \"Unknown\"\n              )}\n            </span>\n          </div>\n          <IconButton edge=\"end\">\n            <EditIcon />\n          </IconButton>\n        </Box>\n\n        <Box flexDirection=\"row\" className={classes.contentRow}>\n          <ButtonGroup\n            orientation=\"vertical\"\n            variant=\"outlined\"\n            className={classes.smallButtonGroup}\n          >\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setQuantity(1)}\n            >\n              +\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setQuantity(-1)}\n            >\n              -\n            </Button>\n          </ButtonGroup>\n          <div\n            className={classes.descriptionValueParent}\n            style={{ width: \"65px\" }}\n          >\n            <span className={classes.description}>Quantity</span>\n            <span className={classes.value}>\n              {props.leg.quantity ? props.leg.quantity : \"?\"}\n            </span>\n          </div>\n          <ButtonGroup\n            orientation=\"vertical\"\n            variant=\"outlined\"\n            className={classes.smallButtonGroup}\n          >\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setStrike(1)}\n            >\n              +\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setStrike(-1)}\n            >\n              -\n            </Button>\n          </ButtonGroup>\n          <div className={classes.descriptionValueParent}>\n            <span className={classes.description}>Strike Price</span>\n            <span className={classes.value}>\n              ${props.leg.k ? props.leg.k.toFixed(2) : \"?\"}\n            </span>\n          </div>\n          <IconButton edge=\"end\">\n            <EditIcon />\n          </IconButton>\n        </Box>\n\n        <Box flexDirection=\"row\" className={classes.contentRow}>\n          <ButtonGroup\n            orientation=\"vertical\"\n            variant=\"outlined\"\n            className={classes.smallButtonGroup}\n          >\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setIV(0.05)}\n            >\n              +\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.smallButton}\n              onClick={setIV(-0.05)}\n            >\n              -\n            </Button>\n          </ButtonGroup>\n          <div\n            className={classes.descriptionValueParent}\n            style={{ width: \"60px\" }}\n          >\n            <span className={classes.description}>Unit Price</span>\n            <span className={classes.value}>\n              $\n              {legGrossValueAtPoint(\n                props.entryStockPrice,\n                props.entryTime,\n                props.leg,\n                props.r\n              ).toFixed(2)}\n            </span>\n          </div>\n          <div className={classes.descriptionValueParent}>\n            <span className={classes.description}>Implied Volatility</span>\n            <span className={classes.value}>\n              {props.leg.iv ? props.leg.iv.toFixed(2) : \"?\"}\n            </span>\n          </div>\n          <IconButton edge=\"end\">\n            <EditIcon />\n          </IconButton>\n        </Box>\n      </Collapse>\n    </Card>\n  );\n}\n\nexport interface PortfolioSummaryProps {\n  entryStockPrice: number;\n  r: number;\n  portfolio: Portfolio;\n}\n\n// @ts-ignore\nconst portfolioSummaryStyles = makeStyles((theme: Theme) => ({\n  card: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n    paddingTop: theme.spacing(2),\n    overflow: \"visible\",\n  },\n  cardHeader: {\n    cursor: \"pointer\",\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  contentRow: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    justifyContent: \"space-between\",\n  },\n  bottomMargin: {\n    marginBottom: theme.spacing(2),\n  },\n  descriptionValueParent: {\n    display: \"flex\",\n    flexGrow: 1,\n    flexBasis: \"0px\",\n    flexDirection: \"column\",\n  },\n  descriptionValueParentShrink: {\n    display: \"flex\",\n    flexShrink: 1,\n    flexBasis: \"0px\",\n    flexDirection: \"column\",\n    \"& :last-child\": {\n      fontSize: \"0.875rem\",\n    },\n  },\n  description: {\n    fontSize: \"12px\",\n    color: grey[500],\n    marginTop: \"-2px\",\n    marginBottom: \"3px\",\n  },\n  value: {},\n  textCenter: {\n    textAlign: \"center\",\n  },\n}));\n\nexport function PortfolioSummary(props: PortfolioSummaryProps) {\n  const classes = portfolioSummaryStyles();\n\n  return (\n    <Card className={classes.card}>\n      <Box flexDirection=\"row\" className={classes.contentRow}>\n        <div className={classes.descriptionValueParent}>\n          <span className={classes.description}>Net Price</span>\n          <span className={classes.value}>\n            $\n            {portfolioEntryCost(\n              props.entryStockPrice,\n              props.portfolio,\n              props.r\n            ).toFixed(2)}\n          </span>\n        </div>\n        <div className={classes.descriptionValueParent}>\n          <span className={classes.description}>Weighted IV</span>\n          <span className={classes.value}>\n            {weightedIV(props.portfolio).toFixed(2)}\n          </span>\n        </div>\n      </Box>\n\n      <Box flexDirection=\"row\" className={classes.contentRow}>\n        <div className={classes.descriptionValueParent}>\n          <span className={classes.description}>Max Gain</span>\n          <span className={classes.value}>38.39 (32x)</span>\n        </div>\n        <div className={classes.descriptionValueParent}>\n          <span className={classes.description}>Max Loss</span>\n          <span className={classes.value}>-$1.39 (-100%)</span>\n        </div>\n      </Box>\n\n      <Divider className={classes.bottomMargin} />\n\n      <Box flexDirection=\"row\" className={classes.contentRow}>\n        <Tooltip title=\"Delta - how much the option value changes for every dollar increase in stock price\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x394;\n            </span>\n            <span className={classes.value}>0.13</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Delta% - how much the option value changes (as a % of max loss) for every dollar increase in stock price\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x394;%\n            </span>\n            <span className={classes.value}>0.13</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Gamma - how much Delta changes for every dollar increase in stock price\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x194;\n            </span>\n            <span className={classes.value}>0.13</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Gamma% - how much Delta% changes for every dollar increase in stock price\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={classes.description}>&#x194;%</span>\n            <span className={classes.value}>22%</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Theta - how much the option value changes every day due to time decay\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x3F4;\n            </span>\n            <span className={classes.value}>-3.3</span>\n          </div>\n        </Tooltip>\n        <Tooltip title=\"Theta% - how much the option value changes (as a % of max loss) every day due to time decay\">\n          <div className={classes.descriptionValueParentShrink}>\n            <span className={clsx(classes.description, classes.textCenter)}>\n              &#x3F4;%\n            </span>\n            <span className={classes.value}>-4.3%</span>\n          </div>\n        </Tooltip>\n      </Box>\n    </Card>\n  );\n}\n","import { Button, Drawer, Theme } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { OptionLegCard, PortfolioSummary } from \"./option-leg-card\";\nimport { Leg, Portfolio } from \"./portfolio\";\n\nexport const drawerWidth = 350;\n\n// @ts-ignore\nconst drawerStyles = makeStyles((theme: Theme) => ({\n  toolbar: theme.mixins.toolbar,\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    overflowX: \"hidden\",\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    overflowX: \"hidden\",\n  },\n  drawerTypography: {\n    paddingTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  drawerTypographySmall: {\n    paddingTop: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n  addIconButton: {\n    alignSelf: \"flex-end\",\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport type LeftDrawerProps = {\n  symbol: string;\n  setSymbol: (symbol: string) => void;\n  entryStockPrice: number;\n  setEntryStockPrice: (s: number) => void;\n  entryTime: moment.Moment;\n  r: number;\n  setR: (r: number) => void;\n  portfolio: Portfolio;\n  setPortfolio: (p: Portfolio) => void;\n};\n\nexport function LeftDrawer(props: LeftDrawerProps) {\n  const classes = drawerStyles();\n\n  const setLeg = (legIndex: number) => (newLeg: Leg) => {\n    const newPortfolio = _.cloneDeep(props.portfolio);\n    newPortfolio.legs[legIndex] = newLeg;\n    props.setPortfolio(newPortfolio);\n  };\n  const deleteLeg = (legIndex: number) => () => {\n    if (props.portfolio.legs.length === 1) {\n      return;\n    }\n    const newPortfolio = _.cloneDeep(props.portfolio);\n    newPortfolio.legs = newPortfolio.legs.filter((_, i) => i !== legIndex);\n    props.setPortfolio(newPortfolio);\n  };\n  const addLeg = () => {\n    const newPortfolio = _.cloneDeep(props.portfolio);\n    newPortfolio.legs.push({\n      ...newPortfolio.legs[newPortfolio.legs.length - 1],\n    });\n    props.setPortfolio(newPortfolio);\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"left\"\n    >\n      <div className={classes.toolbar} />\n\n      <Grid container className={classes.drawerTypography} spacing={2}>\n        <Grid item xs={6}>\n          <TextField\n            label={\"Stock Ticker\"}\n            fullWidth\n            variant=\"outlined\"\n            value={props.symbol}\n            onChange={(e) => props.setSymbol(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label=\"Stock Price\"\n            fullWidth\n            variant=\"outlined\"\n            value={props.entryStockPrice.toFixed(2)}\n            type=\"number\"\n            onChange={(e) =>\n              props.setEntryStockPrice(parseFloat(e.target.value))\n            }\n          />\n        </Grid>\n      </Grid>\n\n      <Typography className={classes.drawerTypographySmall} />\n      <Divider />\n\n      <Typography variant=\"h6\" className={classes.drawerTypography}>\n        Options Legs\n      </Typography>\n      {props.portfolio.legs.map((leg: Leg, i: number) => (\n        <OptionLegCard\n          entryStockPrice={props.entryStockPrice}\n          entryTime={props.entryTime}\n          r={props.r}\n          leg={leg}\n          setLeg={setLeg(i)}\n          deleteLeg={deleteLeg(i)}\n        />\n      ))}\n\n      <Button\n        variant=\"text\"\n        startIcon={<AddIcon />}\n        className={classes.addIconButton}\n        onClick={addLeg}\n      >\n        Add Leg\n      </Button>\n\n      <PortfolioSummary\n        entryStockPrice={props.entryStockPrice}\n        r={props.r}\n        portfolio={props.portfolio}\n      />\n\n      <Typography className={classes.drawerTypographySmall} />\n      <Divider />\n\n      <Typography variant=\"h6\" className={classes.drawerTypography}>\n        Variables\n      </Typography>\n      <form className={classes.drawerTypography} noValidate autoComplete=\"off\">\n        <TextField\n          label={\"r (risk-free rate)\"}\n          fullWidth\n          variant=\"outlined\"\n          value={props.r}\n          type=\"number\"\n          onChange={(e) => props.setR(parseFloat(e.target.value))}\n        />\n      </form>\n    </Drawer>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { portfolioNetValuePoint } from \"./blackscholes\";\nimport {\n  defaultPortfolio,\n  getEarliestExpiration,\n  portfolioFromURL,\n  portfolioToURL,\n} from \"./portfolio\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Icon, IconButton, Toolbar } from \"@material-ui/core\";\nimport \"typeface-roboto\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Link from \"@material-ui/core/Link\";\nimport LooksIcon from \"@material-ui/icons/Looks\";\nimport { Contours } from \"./contours\";\nimport moment from \"moment\";\nimport { drawerWidth, LeftDrawer } from \"./left-drawer\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  titleLink: {\n    color: \"#FFF\",\n  },\n  toolbar: theme.mixins.toolbar,\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  content: {\n    top: 0,\n    right: 0,\n    width: `calc(100% - ${drawerWidth}px)`,\n    height: \"100%\",\n    display: \"flex\",\n    position: \"fixed\",\n    overflowY: \"hidden\",\n    padding: 0,\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n\n  // Parse portfolio from browser hash\n  const history = useHistory();\n  const urlParams = useParams();\n  const setPortfolio = (portfolio, replace = false) => {\n    const url = `/p/${portfolioToURL(portfolio)}`;\n    if (replace) {\n      history.replace(url);\n    } else {\n      history.push(url);\n    }\n  };\n  let portfolio;\n  try {\n    portfolio = portfolioFromURL(urlParams.p);\n  } catch (e) {\n    console.log(\n      \"Failed to deserialize portfolio form hash, falling back to default portfolio.\"\n    );\n    portfolio = defaultPortfolio;\n    setPortfolio(portfolio, true);\n  }\n\n  const [r, setR] = useState(0.007);\n  const [mouseST, setMouseST] = useState({\n    s: 0,\n    t: moment(),\n    mouseX: 0,\n    mouseY: 0,\n    show: false,\n  });\n  const [symbol, setSymbol] = useState(\"TEST\");\n  const [entryStockPrice, setEntryStockPrice] = useState(5);\n  // TODO(advait): Allow us to modify the stock/time window via state\n  const timeWindow = {\n    t0: portfolio.entryTime,\n    tFinal: getEarliestExpiration(portfolio),\n  };\n  const stockPriceRange = 2 * entryStockPrice;\n  const stockPriceWindow = {\n    yFinal: Math.max(0, entryStockPrice - stockPriceRange),\n    y0: entryStockPrice + stockPriceRange,\n  };\n\n  const portfolioValue = portfolioNetValuePoint(\n    entryStockPrice,\n    mouseST.s,\n    mouseST.t,\n    portfolio,\n    r\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Icon edge=\"start\" className={classes.menuButton}>\n            <Link href=\"/\" underline=\"none\" className={classes.titleLink}>\n              <LooksIcon />\n            </Link>\n          </Icon>\n          <Link\n            href=\"/\"\n            underline=\"none\"\n            variant=\"h6\"\n            className={classes.titleLink}\n          >\n            Rainbow Options Calculator\n          </Link>\n          <div style={{ flexGrow: 1 }} />\n          <div>\n            <IconButton\n              aria-label=\"link to github\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <Link\n                href=\"https://github.com/advait/rainbow-options\"\n                className={classes.titleLink}\n                target=\"_blank\"\n              >\n                <GitHubIcon />\n              </Link>\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <LeftDrawer\n        portfolio={portfolio}\n        setPortfolio={setPortfolio}\n        portfolioValue={portfolioValue}\n        r={r}\n        setR={setR}\n        timeWindow={timeWindow}\n        symbol={symbol}\n        setSymbol={setSymbol}\n        entryStockPrice={entryStockPrice}\n        setEntryStockPrice={setEntryStockPrice}\n        mouseST={mouseST}\n        setST={setMouseST}\n      />\n      <main className={classes.content}>\n        <Contours\n          portfolio={portfolio}\n          portfolioValue={portfolioValue}\n          r={r}\n          timeWindow={timeWindow}\n          stockPriceWindow={stockPriceWindow}\n          entryStockPrice={entryStockPrice}\n          setEntryStockPrice={setEntryStockPrice}\n          st={mouseST}\n          setST={setMouseST}\n        />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { wrapReact } from \"./graphql\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  wrapReact(\n    <HashRouter>\n      <Switch>\n        <Route path=\"/p/:p\">\n          <App />\n        </Route>\n        <Route>\n          <App />\n        </Route>\n      </Switch>\n    </HashRouter>\n  ),\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}